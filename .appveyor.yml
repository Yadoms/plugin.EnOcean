# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

# version format
version: 1.0.{build}

# Build worker image (VM template)
image: Visual Studio 2017

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Win32

# build Configuration, i.e. Debug, Release, etc.
configuration: Debug

# Add pre-compiled dependencies in cache
cache:  
  - extra_libs\boost_1_64_0 -> '.appveyor.yml'
  - extra_libs\poco-1.7.9-all -> '.appveyor.yml'
  - extra_libs\openssl -> '.appveyor.yml'
  - extra_libs\protobuf-3.4.1 -> '.appveyor.yml'

# scripts that run after cloning repository
install:
  # Download extra libs
  - ps: echo "Download extra libs..."
  - ps: if (!(Test-Path 'extra_libs')) { mkdir 'extra_libs' }
  - ps: pushd extra_libs
  - ps: if (!(Test-Path 'boost_1_64_0')) { Invoke-WebRequest http://yadoms.com/appveyor_build/boost_1_64_0-build.7z -OutFile boost.7z; 7z x boost.7z -bso0 }
  - ps: if (!(Test-Path 'poco-1.7.9-all')) { Invoke-WebRequest http://yadoms.com/appveyor_build/poco-1.7.9-all-build.7z -OutFile poco.7z; 7z x poco.7z -bso0 }
  - ps: if (!(Test-Path 'openssl')) { Invoke-WebRequest http://yadoms.com/appveyor_build/openssl-build.7z -OutFile openssl.7z; 7z x openssl.7z -bso0 }
  - ps: if (!(Test-Path 'protobuf-3.4.1')) { Invoke-WebRequest http://yadoms.com/appveyor_build/protobuf-3.4.1-build.7z -OutFile protobuf.7z; 7z x protobuf.7z -bso0 }
  - ps: rm *.7z
  - ps: popd    
  - ps: echo "[END] install"

# scripts to run before build
before_build:  
  # Yadoms configuration file
  - ps: echo "Create Yadoms configuration file CMakeListsUserConfig.txt..."
  - ps: $cd_for_cmake="$pwd".Replace("\", "/")
  - ps: echo $cd_for_cmake
  - ps: Set-Content 'CMakeListsUserConfig.txt' ('set(BOOST_ROOT "' + $cd_for_cmake + '/extra_libs/boost_1_64_0")')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(POCO_ROOT "' + $cd_for_cmake + '/extra_libs/poco-1.7.9-all")')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(OPENSSL_ROOT "' + $cd_for_cmake + '/extra_libs/openssl")')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(PROTOBUF_ROOT "' + $cd_for_cmake + '/extra_libs/protobuf-3.4.1")')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(PYTHON_ROOT "C:/Python27")')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(COTIRE_USE ON)')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(COTIRE_USE_UNITY ON)')
  - ps: Add-Content 'CMakeListsUserConfig.txt' ('set(PYTHON_USE_SOURCES OFF)')
  - ps: cat 'CMakeListsUserConfig.txt'

  # Create solution
  - ps: echo "Create solution..."
  - cmd: cmake_windows.cmd
  
  
build:
  parallel: false
  project: projects/enOcean.sln

  # MSBuild verbosity level
  verbosity: normal

  
notifications:
  - provider: Email
    subject: 'Build {{status}}: {{projectName}}, branch {{branch}}, {{buildVersion}}'
    to:
      - '{{commitAuthorEmail}}'
    on_build_status_changed: true
  